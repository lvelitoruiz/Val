{"version":3,"file":"component---src-pages-invest-tsx-9246d5df40a07c46204e.js","mappings":"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","sources":["webpack://boiler-plate/./src/components/BannerForm.tsx","webpack://boiler-plate/./src/components/Input.tsx","webpack://boiler-plate/./src/components/TextArea.tsx","webpack://boiler-plate/./src/components/FormInvest.tsx","webpack://boiler-plate/./src/pages/invest.tsx","webpack://boiler-plate/./node_modules/iconoir-react/dist/esm/Check.mjs"],"sourcesContent":["import React from \"react\";\n\ninterface ProjectProps {\n  imgUrl: string;\n  title: string;\n  text: string;\n}\nconst BannerForm: React.FC<ProjectProps> = ({\n  imgUrl,\n  title,\n  text\n}) => {\n  return (\n    <section className=\"h-[590px] lg:h-[790px] relative\">\n      <div className=\"absolute top-0 left-0 right-0 bottom-0\">\n        <div className=\"relative h-full w-full before:content-[''] before:bg-[rgba(49,62,72,0.60)] before:absolute before:top-0 before:bottom-0 before:right-0 before:left-0\">\n          <img\n            className=\"w-full h-full object-cover rounded-t\"\n            src={imgUrl}\n            alt=\"\"\n          />\n        </div>\n      </div>\n      <div className=\"container mx-auto px-6 lg:px-0 relative pt-28 md:pt-36\">\n        <div className=\"md:w-9/12 lg:w-6/12\">\n          <h1 className=\"text-white text-[36px] lg:text-[56px] font-semibold mb-4 leading-tight\">\n            {title}\n          </h1>\n          <p className=\"text-white font-light\">\n            {text}\n          </p>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default BannerForm;","import React, { forwardRef, useEffect, useState } from \"react\";\n\ninterface inputProps {\n    texto: string;\n    placeholder: string;\n    name: string;\n    type?: string;\n    customStyles?: React.CSSProperties;\n    extraStyles?: string;\n    onValueChange: (value: string) => void;\n}\n\nconst Input = forwardRef(({texto,placeholder,name,type = \"text\",onValueChange,customStyles,extraStyles}: inputProps) => {\n\n    const [inputValue,setInputValue] = useState(\"\");\n    const [placeHold,setPlaceHolder] = useState(\"\");\n    const [inputType,setInputType] = useState(\"text\");\n    const [inputName,setInputName] = useState(\"\");\n\n    const handleChange = (value: string) => {\n        setInputValue(value);\n        onValueChange(value);\n    }\n\n    useEffect( () => {\n        setInputValue(texto);\n        setInputName(name);\n        setPlaceHolder(placeholder);\n        setInputType(type);\n    },[name, placeholder, texto, type]);\n\n  return (\n    <input\n      className={`h-[50px] px-4 border border-[#8B8986] w-full outline-[--color-primary] rounded-none ${extraStyles}`}\n      type={inputType}\n      name={inputName}\n      id={inputName}\n      value={inputValue}\n      onChange={(event) => handleChange(event.target.value)}\n      placeholder={placeHold}\n    />\n  );\n});\n\nexport default Input;\n","import React, { forwardRef, useEffect, useState } from \"react\";\n\ninterface TextAreaProps {\n    texto: string;\n    placeholder: string;\n    name: string;\n    type?: string;\n    customStyles?: React.CSSProperties;\n    extraStyles?: string;\n    onValueChange: (value: string) => void;\n}\n\nconst TextArea = forwardRef(({texto,placeholder,name,type = \"text\",onValueChange,customStyles,extraStyles}: TextAreaProps) => {\n\n    const [inputValue,setInputValue] = useState(\"\");\n    const [placeHold,setPlaceHolder] = useState(\"\");\n    const [inputName,setInputName] = useState(\"\");\n\n    const handleChange = (value: string) => {\n        setInputValue(value);\n        onValueChange(value);\n    }\n\n    useEffect( () => {\n        setInputValue(texto);\n        setInputName(name);\n        setPlaceHolder(placeholder);\n    },[name, placeholder, texto, type]);\n\n  return (\n    <textarea\n      name={inputName}\n      id={inputName}\n      cols={30}\n      rows={4}\n      value={inputValue}\n      placeholder={placeHold}\n      className=\"p-4 border border-[#8B8986] w-full outline-[--color-primary] rounded-none\"\n    ></textarea>\n  );\n});\n\nexport default TextArea;\n","import React, { useState } from \"react\";\n\nimport Button from \"./Button\";\nimport Input from \"./Input\";\nimport { Check } from \"iconoir-react\";\nimport TextArea from \"./TextArea\";\n\nconst FormInvest = () => {\n  const [userName, setUserName] = useState(\"\");\n  const receiveFromChild = (event: any) => {\n    setUserName(event);\n  };\n\n  return (\n    <section className=\"bg-[#F6F6F6] pb-28\">\n      <div className=\"container mx-auto px-6 lg:px-0\">\n        <div className=\"flex items-center justify-center\">\n          <div className=\"w-[926px] p-6 md:p-10 lg:py-20 lg:px-36 bg-white border border-[#F6F6F6] relative mt-[-200px]\">\n            <h3 className=\"text-center text-[30px] text-[--color-secondary] pb-6 w-8/12 mx-auto\">\n              Déjanos tus datos y un asesor se comunicará a la brevedad.\n            </h3>\n            <form className=\"grid grid-cols-6 md:grid-cols-6 gap-8\" action=\"\">\n              <div className=\"col-span-6 md:col-span-3\">\n                <Input\n                  texto={\"\"}\n                  placeholder={\"Nombres\"}\n                  name={\"tutor\"}\n                  onValueChange={receiveFromChild}\n                  type=\"text\"\n                />\n              </div>\n              <div className=\"col-span-6 md:col-span-3\">\n                <Input\n                  texto={\"\"}\n                  placeholder={\"Apellidos\"}\n                  name={\"tutor\"}\n                  onValueChange={receiveFromChild}\n                  type=\"text\"\n                />\n              </div>\n              <div className=\"col-span-6 md:col-span-3\">\n                <Input\n                  texto={\"\"}\n                  placeholder={\"Correo electrónico\"}\n                  name={\"tutor\"}\n                  onValueChange={receiveFromChild}\n                  type=\"text\"\n                />\n              </div>\n              <div className=\"col-span-6 md:col-span-3\">\n                <Input\n                  texto={\"\"}\n                  placeholder={\"Teléfono\"}\n                  name={\"tutor\"}\n                  onValueChange={receiveFromChild}\n                  type=\"text\"\n                />\n              </div>\n              <div className=\"col-span-6 md:col-span-6\">\n                <TextArea\n                  texto={\"\"}\n                  placeholder={\"MENSAJE\"}\n                  name={\"\"}\n                  onValueChange={receiveFromChild}\n                />\n              </div>\n              <div className=\"col-span-6 md:col-span-6\">\n                <div className=\"space-y-2\">\n                  <label className=\"flex items-center\">\n                    <input type=\"checkbox\" className=\"hidden\" />\n                    <div className=\"min-w-[24px] h-6 border-2 border-[--color-primary] rounded flex items-center justify-center hover:border-[--color-primary] transition duration-300\">\n                      <div className=\"hidden icon\">\n                        <Check\n                          strokeWidth={\"3\"}\n                          className=\"font-bold\"\n                          color=\"#009877\"\n                          height={20}\n                          width={20}\n                        />\n                      </div>\n                    </div>\n                    <span className=\"ml-2 text-[#9B8F86]\">\n                      He leído y acepto la Políticas de Privacidad de Datos\n                    </span>\n                  </label>\n                </div>\n              </div>\n              <div className=\"col-span-6 md:col-span-6 flex items-center justify-center\">\n                <Button\n                  extraStyles=\"w-[205px] h-[50px] btn-primary\"\n                  label={\"enviar\"}\n                  customClick={(event) => console.log(event)}\n                />\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default FormInvest;\n","import React, { useState } from \"react\";\nimport type { HeadFC, PageProps } from \"gatsby\";\n\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\n\nimport BannerForm from \"../components/BannerForm\";\nimport FormInvest from \"../components/FormInvest\";\n\nconst Invest: React.FC<PageProps> = () => {\n  const [userName, setUserName] = useState(\"\");\n  const receiveFromChild = (event: any) => {\n    setUserName(event);\n  };\n\n  return (\n    <>\n      <Header />\n\n      <BannerForm imgUrl={\"/static/images/invest.jpg\"} title={\"Invierte en el sector inmobiliario y haz crecer tu patrimonio\"} text={\"A través de Conexa Financial Group, podrás conocer las oportunidades de inversión que te ofrecemos con subyacente inmobiliario.\"} />\n\n      <FormInvest />\n\n      <Footer />\n    </>\n  );\n};\n\nexport default Invest;\n\nexport const Head: HeadFC = () => <title>Val - Invierte</title>;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from \"react\";\nimport { IconoirContext } from \"./IconoirContext.mjs\";\nfunction SvgCheck(passedProps, svgRef) {\n    var context = React.useContext(IconoirContext);\n    var props = __assign(__assign({}, context), passedProps);\n    return (React.createElement(\"svg\", __assign({ width: \"1.5em\", height: \"1.5em\", strokeWidth: 1.5, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", color: \"currentColor\", ref: svgRef }, props),\n        React.createElement(\"path\", { d: \"M5 13l4 4L19 7\", stroke: \"currentColor\", strokeLinecap: \"round\", strokeLinejoin: \"round\" })));\n}\nvar ForwardRef = React.forwardRef(SvgCheck);\nexport default ForwardRef;\n"],"names":["_ref","imgUrl","title","text","React","className","src","alt","Input","forwardRef","texto","placeholder","name","type","onValueChange","customStyles","extraStyles","inputValue","setInputValue","useState","placeHold","setPlaceHolder","inputType","setInputType","inputName","setInputName","useEffect","id","value","onChange","event","handleChange","target","TextArea","cols","rows","userName","setUserName","receiveFromChild","action","Check","strokeWidth","color","height","width","Button","label","customClick","console","log","Header","BannerForm","FormInvest","Footer","Head","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","ForwardRef","passedProps","svgRef","context","props","viewBox","fill","xmlns","ref","d","stroke","strokeLinecap","strokeLinejoin"],"sourceRoot":""}