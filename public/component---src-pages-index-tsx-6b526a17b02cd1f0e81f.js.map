{"version":3,"file":"component---src-pages-index-tsx-6b526a17b02cd1f0e81f.js","mappings":"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","sources":["webpack://boiler-plate/./node_modules/iconoir-react/dist/esm/NavArrowRight.mjs","webpack://boiler-plate/./node_modules/iconoir-react/dist/esm/NavArrowLeft.mjs","webpack://boiler-plate/./node_modules/iconoir-react/dist/esm/City.mjs","webpack://boiler-plate/./node_modules/iconoir-react/dist/esm/ArrowTr.mjs","webpack://boiler-plate/./node_modules/iconoir-react/dist/esm/Planimetry.mjs","webpack://boiler-plate/./node_modules/iconoir-react/dist/esm/Farm.mjs","webpack://boiler-plate/./node_modules/iconoir-react/dist/esm/PiggyBank.mjs","webpack://boiler-plate/./node_modules/iconoir-react/dist/esm/HomeSale.mjs","webpack://boiler-plate/./node_modules/iconoir-react/dist/esm/LotOfCash.mjs","webpack://boiler-plate/./src/components/SliderBanner.tsx","webpack://boiler-plate/./src/components/Banner.tsx","webpack://boiler-plate/./src/components/Project.tsx","webpack://boiler-plate/./src/components/Projects.tsx","webpack://boiler-plate/./src/pages/index.tsx","webpack://boiler-plate/./node_modules/iconoir-react/dist/esm/PinAlt.mjs"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from \"react\";\nimport { IconoirContext } from \"./IconoirContext.mjs\";\nfunction SvgNavArrowRight(passedProps, svgRef) {\n    var context = React.useContext(IconoirContext);\n    var props = __assign(__assign({}, context), passedProps);\n    return (React.createElement(\"svg\", __assign({ width: \"1.5em\", height: \"1.5em\", strokeWidth: 1.5, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", color: \"currentColor\", ref: svgRef }, props),\n        React.createElement(\"path\", { d: \"M9 6l6 6-6 6\", stroke: \"currentColor\", strokeLinecap: \"round\", strokeLinejoin: \"round\" })));\n}\nvar ForwardRef = React.forwardRef(SvgNavArrowRight);\nexport default ForwardRef;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from \"react\";\nimport { IconoirContext } from \"./IconoirContext.mjs\";\nfunction SvgNavArrowLeft(passedProps, svgRef) {\n    var context = React.useContext(IconoirContext);\n    var props = __assign(__assign({}, context), passedProps);\n    return (React.createElement(\"svg\", __assign({ width: \"1.5em\", height: \"1.5em\", strokeWidth: 1.5, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", color: \"currentColor\", ref: svgRef }, props),\n        React.createElement(\"path\", { d: \"M15 6l-6 6 6 6\", stroke: \"currentColor\", strokeLinecap: \"round\", strokeLinejoin: \"round\" })));\n}\nvar ForwardRef = React.forwardRef(SvgNavArrowLeft);\nexport default ForwardRef;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from \"react\";\nimport { IconoirContext } from \"./IconoirContext.mjs\";\nfunction SvgCity(passedProps, svgRef) {\n    var context = React.useContext(IconoirContext);\n    var props = __assign(__assign({}, context), passedProps);\n    return (React.createElement(\"svg\", __assign({ width: \"1.5em\", height: \"1.5em\", strokeWidth: 1.5, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", color: \"currentColor\", ref: svgRef }, props),\n        React.createElement(\"path\", { d: \"M7 9.01l.01-.011M11 9.01l.01-.011M7 13.01l.01-.011M11 13.01l.01-.011M7 17.01l.01-.011M11 17.01l.01-.011M15 21H3.6a.6.6 0 01-.6-.6V5.6a.6.6 0 01.6-.6H9V3.6a.6.6 0 01.6-.6h4.8a.6.6 0 01.6.6V9m0 12h5.4a.6.6 0 00.6-.6V9.6a.6.6 0 00-.6-.6H15m0 12v-4m0-8v4m0 0h2m-2 0v4m0 0h2\", stroke: \"currentColor\", strokeLinecap: \"round\", strokeLinejoin: \"round\" })));\n}\nvar ForwardRef = React.forwardRef(SvgCity);\nexport default ForwardRef;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from \"react\";\nimport { IconoirContext } from \"./IconoirContext.mjs\";\nfunction SvgArrowTr(passedProps, svgRef) {\n    var context = React.useContext(IconoirContext);\n    var props = __assign(__assign({}, context), passedProps);\n    return (React.createElement(\"svg\", __assign({ width: \"1.5em\", height: \"1.5em\", viewBox: \"0 0 24 24\", strokeWidth: 1.5, fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", color: \"currentColor\", ref: svgRef }, props),\n        React.createElement(\"path\", { d: \"M6 19L19 6m0 0v12.48M19 6H6.52\", stroke: \"currentColor\", strokeLinecap: \"round\", strokeLinejoin: \"round\" })));\n}\nvar ForwardRef = React.forwardRef(SvgArrowTr);\nexport default ForwardRef;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from \"react\";\nimport { IconoirContext } from \"./IconoirContext.mjs\";\nfunction SvgPlanimetry(passedProps, svgRef) {\n    var context = React.useContext(IconoirContext);\n    var props = __assign(__assign({}, context), passedProps);\n    return (React.createElement(\"svg\", __assign({ width: \"1.5em\", height: \"1.5em\", viewBox: \"0 0 24 24\", strokeWidth: 1.5, fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", color: \"currentColor\", ref: svgRef }, props),\n        React.createElement(\"path\", { d: \"M11 16v-5H3M21 8h-6v2M15 18v3M11 19v2M11 3v3M21 15h-6v-2M11 9v2\", stroke: \"currentColor\", strokeLinecap: \"round\", strokeLinejoin: \"round\" }),\n        React.createElement(\"path\", { d: \"M21 3.6v16.8a.6.6 0 01-.6.6H3.6a.6.6 0 01-.6-.6V3.6a.6.6 0 01.6-.6h16.8a.6.6 0 01.6.6z\", stroke: \"currentColor\", strokeLinecap: \"round\", strokeLinejoin: \"round\" })));\n}\nvar ForwardRef = React.forwardRef(SvgPlanimetry);\nexport default ForwardRef;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from \"react\";\nimport { IconoirContext } from \"./IconoirContext.mjs\";\nfunction SvgFarm(passedProps, svgRef) {\n    var context = React.useContext(IconoirContext);\n    var props = __assign(__assign({}, context), passedProps);\n    return (React.createElement(\"svg\", __assign({ width: \"1.5em\", height: \"1.5em\", strokeWidth: 1.5, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", color: \"currentColor\", ref: svgRef }, props),\n        React.createElement(\"path\", { d: \"M5 20H2V8l6-3 6 3v12h-3m-6 0v-7h6v7m-6 0h6M18 14v6M14 17h8M14 14h8\", stroke: \"currentColor\", strokeLinecap: \"round\", strokeLinejoin: \"round\" })));\n}\nvar ForwardRef = React.forwardRef(SvgFarm);\nexport default ForwardRef;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from \"react\";\nimport { IconoirContext } from \"./IconoirContext.mjs\";\nfunction SvgPiggyBank(passedProps, svgRef) {\n    var context = React.useContext(IconoirContext);\n    var props = __assign(__assign({}, context), passedProps);\n    return (React.createElement(\"svg\", __assign({ width: \"1.5em\", height: \"1.5em\", strokeWidth: 1.5, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", color: \"currentColor\", ref: svgRef }, props),\n        React.createElement(\"path\", { d: \"M14.5 8.5c-.78-.202-1.866-.5-2.735-.5C7.476 8 4 10.668 4 13.958c0 1.891 1.148 3.577 2.938 4.668l-.485 1.6a.6.6 0 00.574.774h1.764a.6.6 0 00.36-.12l1.395-1.047h2.437l1.395 1.047a.6.6 0 00.36.12h1.764a.6.6 0 00.574-.774l-.485-1.6c1.067-.65 1.905-1.511 2.409-2.501M14.5 8.5L19 7l-.084 3.628L21 11.5V15l-1.926 1\", stroke: \"currentColor\", strokeLinecap: \"round\", strokeLinejoin: \"round\" }),\n        React.createElement(\"path\", { d: \"M15.5 13a.5.5 0 110-1 .5.5 0 010 1z\", fill: \"#000\", stroke: \"currentColor\", strokeLinecap: \"round\", strokeLinejoin: \"round\" }),\n        React.createElement(\"path\", { d: \"M2 10s0 2.4 2 3\", stroke: \"currentColor\", strokeLinecap: \"round\", strokeLinejoin: \"round\" }),\n        React.createElement(\"path\", { d: \"M12.8 7.753c.13-.372.2-.772.2-1.188C13 4.596 11.433 3 9.5 3S6 4.596 6 6.565c0 .941.358 1.798.944 2.435\", stroke: \"currentColor\", strokeLinejoin: \"round\" })));\n}\nvar ForwardRef = React.forwardRef(SvgPiggyBank);\nexport default ForwardRef;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from \"react\";\nimport { IconoirContext } from \"./IconoirContext.mjs\";\nfunction SvgHomeSale(passedProps, svgRef) {\n    var context = React.useContext(IconoirContext);\n    var props = __assign(__assign({}, context), passedProps);\n    return (React.createElement(\"svg\", __assign({ width: \"1.5em\", height: \"1.5em\", viewBox: \"0 0 24 24\", strokeWidth: 1.5, fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", color: \"currentColor\", ref: svgRef }, props),\n        React.createElement(\"path\", { d: \"M14 9.846c-1-.923-3.667-1.23-3.667.616S14 11.385 14 13.23s-3 1.846-4 .615M12 14.702V16M12 9.113V8M2 8l9.732-4.866a.6.6 0 01.536 0L22 8\", stroke: \"currentColor\", strokeLinecap: \"round\", strokeLinejoin: \"round\" }),\n        React.createElement(\"path\", { d: \"M20 11v8a2 2 0 01-2 2H6a2 2 0 01-2-2v-8\", stroke: \"currentColor\", strokeLinecap: \"round\", strokeLinejoin: \"round\" })));\n}\nvar ForwardRef = React.forwardRef(SvgHomeSale);\nexport default ForwardRef;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from \"react\";\nimport { IconoirContext } from \"./IconoirContext.mjs\";\nfunction SvgLotOfCash(passedProps, svgRef) {\n    var context = React.useContext(IconoirContext);\n    var props = __assign(__assign({}, context), passedProps);\n    return (React.createElement(\"svg\", __assign({ width: \"1.5em\", height: \"1.5em\", viewBox: \"0 0 24 24\", strokeWidth: 1.5, fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", color: \"currentColor\", ref: svgRef }, props),\n        React.createElement(\"path\", { d: \"M4 18v-8a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2H6a2 2 0 01-2-2zM18.5 14.01l.01-.011M7.5 14.01l.01-.011\", stroke: \"currentColor\", strokeLinecap: \"round\", strokeLinejoin: \"round\" }),\n        React.createElement(\"path\", { d: \"M4 16H3a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v2M13 16a2 2 0 110-4 2 2 0 010 4z\", stroke: \"currentColor\", strokeLinecap: \"round\", strokeLinejoin: \"round\" })));\n}\nvar ForwardRef = React.forwardRef(SvgLotOfCash);\nexport default ForwardRef;\n","import { City } from \"iconoir-react\";\nimport React, { useEffect, useState } from \"react\";\n\nimport Button from \"./Button\";\nimport { navigate } from \"gatsby\";\n\ninterface SliderBannerProps {\n  title: string;\n  imgUrl: string;\n  imgAlt?: string;\n  paragraph: string;\n  nameProyect: string;\n  titleMobile?: string;\n  btn: string;\n  projects: boolean; \n  link: string;\n}\n\nconst SliderBanner: React.FC<SliderBannerProps> = ({\n  title,\n  imgUrl,\n  imgAlt,\n  paragraph,\n  nameProyect,\n  titleMobile,\n  projects = false,\n  btn,\n  link,\n}) => {\n  const [proyectos, setProyectos] = useState(projects);\n\n  const handleCustomClick = (event: string) => {\n    navigate(`/${link}`)\n  };\n\n  useEffect(() => {\n    if(projects !== undefined && projects !== null) {\n      setProyectos(projects);\n    }\n  },[projects])\n\n  return (\n    <div className=\"relative h-[600px] md:h-[calc(100vh-80px)]\">\n      <div className=\"absolute top-0 left-0 right-0 bottom-0\">\n        <div className=\"relative h-full w-full before:content-[''] before:bg-[rgba(49,62,72,0.60)] before:absolute before:top-0 before:bottom-0 before:right-0 before:left-0\">\n          <img\n            className=\"w-full h-full object-cover rounded-t\"\n            src={imgUrl}\n            alt={imgAlt}\n          />\n        </div>\n      </div>\n      <div className=\"container mx-auto px-6 h-full relative lg:pl-16 banner-info\">\n        <div className=\"banner-text flex flex-col items-start justify-center h-100% md:h-[calc(100%-315px)] pt-10 md:pt-0 md:w-8/12\">\n          <div className=\"pb-5\">\n            <h4 className=\"lg:hidden text-[20px] md:text-[30px] lg:text-[56px] font-semibold text-white leading-none lg:leading-tight pb-4\">{titleMobile}</h4>\n            <h2 className=\"text-[36px] md:text-[46px] lg:text-[56px] text-white leading-none lg:leading-tight pb-4\">\n              {title}\n            </h2>\n            <p className=\"text-white font-light\">{paragraph}</p>\n          </div>\n          {proyectos ? (\n            <div className=\"pt-4 border-t border-[#7F8387] w-full\">\n              <p className=\"font-semibold text-white pb-4\">Nuestro proyecto</p>\n              <div className=\"flex items-center justify-start gap-10\">\n                <div className=\"flex items-center gap-4\">\n                  <div className=\"w-[30px] h-[30px] flex items-center justify-center bg-white rounded-sm\">\n                    <City color=\"#009877\" height={18} width={18} />\n                  </div>\n                  <p className=\"text-white\">{nameProyect}</p>\n                </div>\n              </div>\n            </div>\n          ) : null}\n          <div className=\"pt-10 w-full md:w-[355px]\">\n            <Button\n              label={btn}\n              extraStyles=\"btn-primary w-full md:w-[355px] h-[56px]\"\n              customClick={(event) => handleCustomClick(event)}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SliderBanner;\n","import {\n  City,\n  NavArrowRight,\n  NavArrowLeft,\n  Planimetry,\n  Farm,\n  LotOfCash,\n  HomeSale,\n  PiggyBank,\n  ArrowTr,\n} from \"iconoir-react\";\nimport React, { useEffect, useState } from \"react\";\n\nimport \"swiper/css\";\nimport \"swiper/css/pagination\";\nimport \"swiper/css/effect-fade\";\n\nimport { Pagination, Autoplay, EffectFade } from \"swiper/modules\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\n\nimport SliderBanner from \"./SliderBanner\";\nimport { processInfo } from \"../utils/processInfo\";\n\ninterface dataItem {\n  title: string,\n  imgUrl: string,\n  titleMobile: string,\n  imgAlt: string,\n  paragraph: string,\n  nameProyect: string,\n  btn: string,\n  projects: boolean,\n  link: string,\n}\n\nconst Banner = () => {\n\n  const [data,setData] = useState<dataItem[]>([]);\n\n  const getBannerInfo = async () => {\n    const dataResponse: any = await processInfo(\"banner-items\");\n\n    const dataFormatted = dataResponse.data.map( (item: any) => ({\n      title: item.attributes.title,\n      imgUrl: item.attributes.image.data.attributes.url,\n      titleMobile: item.attributes.titlemobile,\n      imgAlt: item.attributes.imgalt,\n      paragraph: item.attributes.texto,\n      nameProyect: item.attributes.projectname,\n      btn: item.attributes.btn,\n      projects: item.attributes.projects,\n      link: item.attributes.link\n    }))\n\n    setData(dataFormatted);\n  }\n\n  useEffect( () => {\n    getBannerInfo();\n  },[]);\n\n  // const data = [\n  //   {\n  //     title: \"Espacios modernos, para familias modernas\",\n  //     imgUrl: \"/static/images/top-life-2.jpg\",\n  //     titleMobile: \"Viviendas multifamiliares\",\n  //     imgAlt: \"\",\n  //     paragraph:\n  //       \"Construimos departamentos eco amigables, que ayudan a crear un mejor entorno a la vez que cuidamos el planeta.\",\n  //     nameProyect: \"Top Life\",\n  //     btn: \"VER NUESTROS PROYECTOS\",\n  //     projects: true,\n  //   },\n  //   {\n  //     title: \"Urbanizamos lotes para crear mejores ciudades\",\n  //     imgUrl: \"/static/images/oxa.jpg\",\n  //     imgAlt: \"\",\n  //     titleMobile: \"Lotes Urbanos\",\n  //     paragraph:\n  //       \"Queremos que las ciudades crezcan ordenadamente y diseñamos proyectos de lotes urbanos para mejorar la calidad de vida de las personas.\",\n  //     nameProyect: \"Oxapampa\",\n  //     btn: \"VER NUESTROS PROYECTOS\",\n  //     projects: true,\n  //   },\n  //   {\n  //     title:\n  //       \"Transformamos bancos de terrenos en oportunidades para la agro industria\",\n  //     imgUrl: \"/static/images/agro.jpg\",\n  //     imgAlt: \"\",\n  //     titleMobile: \"Desarrollo Agroindustrial\",\n  //     paragraph:\n  //       \"Creamos nuevos negocios a partir de explotar terrenos de alto valor agrícola en el interior del país.\",\n  //     nameProyect: \"Proyecto Olmos - Fundo San Isidro\",\n  //     btn: \"VER NUESTROS PROYECTOS\",\n  //     projects: true,\n  //   },\n  //   {\n  //     title:\n  //       \"Administramos bancos de terrenos en el interior del país para crear valor futuro\",\n  //     imgUrl: \"/static/images/bank.jpg\",\n  //     imgAlt: \"\",\n  //     titleMobile: \"Banco de terrenos\",\n  //     paragraph: \"2,500 hectáreas forman parte de nuestro portafolio.\",\n  //     nameProyect: \"\",\n  //     btn: \"MÁS INFORMACIÓN\",\n  //     projects: false,\n  //   },\n  //   {\n  //     title: \"¿Quieres vender un terreno urbano?\",\n  //     imgUrl: \"/static/images/sell.jpg\",\n  //     imgAlt: \"\",\n  //     titleMobile: \"Vende tu terreno\",\n  //     paragraph:\n  //       \"Buscamos nuevos espacios dentro de la ciudad para desarrollar proyectos inmobiliarios.\",\n  //     nameProyect: \"\",\n  //     btn: \"MÁS INFORMACIÓN\",\n  //     projects: false,\n  //   },\n  //   {\n  //     title: \"Somos parte de Conexa Financial Group\",\n  //     imgUrl: \"/static/images/invest.jpg\",\n  //     imgAlt: \"\",\n  //     titleMobile: \"¿Quieres invertir?\",\n  //     paragraph:\n  //       \"Invierte con nosotros y genera rentabilidad a partir de productos inmobiliarios.\",\n  //     nameProyect: \"\",\n  //     btn: \"MÁS INFORMACIÓN\",\n  //     projects: false,\n  //   },\n  // ];\n\n  return (\n    <div className=\"pt-20 lg:h-screen\">\n      <Swiper\n        spaceBetween={0}\n        pagination={true}\n        effect={\"fade\"}\n        slidesPerView={1}\n        loop={true}\n        autoplay={{\n          delay: 6000, \n          disableOnInteraction: false,\n        }}\n        modules={[Pagination, Autoplay, EffectFade]}\n        onSwiper={(event) => console.log(\"working \", event)}\n      >\n        {data.map((item, index) => (\n          <SwiperSlide key={index}>\n            <SliderBanner\n              title={item.title}\n              imgUrl={item.imgUrl}\n              paragraph={item.paragraph}\n              titleMobile={item.titleMobile}\n              nameProyect={item.nameProyect}\n              btn={item.btn}\n              projects={item.projects}\n              link={item.link}\n            />\n          </SwiperSlide>\n        ))}\n      </Swiper>\n      <div className=\"absolute bottom-16 left-0 right-0 w-full z-[2] hidden md:block\">\n        <div className=\"mx-8 bg-[#313E48] h-[248px] flex\">\n          <div className=\"min-w-[128px] flex flex-col bg-white\">\n            <div className=\"w-full h-[50%] cursor-pointer flex items-center justify-center border-b border-[--border-ligth]\">\n              <NavArrowRight color=\"#313E48\" height={30} width={30} />\n            </div>\n            <div className=\"w-full h-[50%] cursor-pointer flex items-center justify-center\">\n              <NavArrowLeft color=\"#313E48\" height={30} width={30} />\n            </div>\n          </div>\n          <div className=\"w-full overflow-hidden\">\n            <div className=\"flex overflow-auto\">\n              <div className=\"flex flex-col p-10 h-[248px] min-w-[50%] lg:min-w-[25%] 2xl:min-w-[20%] relative bg-[--color-primary] cursor-pointer\">\n                <City color=\"#fff\" height={38} width={38} />\n                <h4 className=\"uppercase text-[20px] text-white leading-none pt-5 pb-2\">\n                  Viviendas multifamiliares\n                </h4>\n                <p className=\"text-sm text-white font-light\">\n                  Encuentra aquí tu próximo departamento.\n                </p>\n                <div className=\"absolute right-0 top-0 w-[42px] h-[42px] bg-black/30 flex items-center justify-center cursor-pointer\">\n                  <ArrowTr color=\"#fff\" height={20} width={20} />\n                </div>\n              </div>\n              <div className=\"flex flex-col p-10 h-[248px] min-w-[50%] lg:min-w-[25%] 2xl:min-w-[20%] relative cursor-pointer 2xl:pb-0\">\n                <Planimetry color=\"#fff\" height={38} width={38} />\n                <h4 className=\"uppercase text-[20px] text-white leading-none pt-5 pb-2\">\n                  Lotes Urbanos\n                </h4>\n                <p className=\"text-sm text-white font-light\">\n                  Espacios dentro de la ciudad listos para que construyas tu\n                  casa o negocio.\n                </p>\n                <div className=\"absolute right-0 top-0 w-[42px] h-[42px] bg-black/30 flex items-center justify-center cursor-pointer\">\n                  <ArrowTr color=\"#fff\" height={20} width={20} />\n                </div>\n              </div>\n              <div className=\"flex flex-col p-10 h-[248px] min-w-[50%] lg:min-w-[25%] 2xl:min-w-[20%] relative cursor-pointer 2xl:pb-0\">\n                <Farm color=\"#fff\" height={38} width={38} />\n                <h4 className=\"uppercase text-[20px] text-white leading-none pt-5 pb-2\">\n                  Desarrollo Agroindustrial\n                </h4>\n                <p className=\"text-sm text-white font-light\">\n                  Rentabilizamos nuestros terrenos para crear nuevos espacios de\n                  cultivos.\n                </p>\n                <div className=\"absolute right-0 top-0 w-[42px] h-[42px] bg-black/30 flex items-center justify-center cursor-pointer\">\n                  <ArrowTr color=\"#fff\" height={20} width={20} />\n                </div>\n              </div>\n              <div className=\"flex flex-col p-10 h-[248px] min-w-[50%] lg:min-w-[25%] 2xl:min-w-[20%] relative cursor-pointer 2xl:pb-0\">\n                <PiggyBank color=\"#fff\" height={38} width={38} />\n                <h4 className=\"uppercase text-[20px] text-white leading-none pt-5 pb-2\">\n                  BANCO DE TERRENOS\n                </h4>\n                <p className=\"text-sm text-white font-light\">\n                  Buscamos el retorno de inversión sobre terrenos de alto valor.\n                </p>\n                <div className=\"absolute right-0 top-0 w-[42px] h-[42px] bg-black/30 flex items-center justify-center cursor-pointer\">\n                  <ArrowTr color=\"#fff\" height={20} width={20} />\n                </div>\n              </div>\n              <div className=\"flex flex-col p-10 h-[248px] min-w-[50%] lg:min-w-[25%] 2xl:min-w-[20%] relative cursor-pointer 2xl:pb-0\">\n                <HomeSale color=\"#fff\" height={38} width={38} />\n                <h4 className=\"uppercase text-[20px] text-white leading-none pt-5 pb-2\">\n                  VENDE TU TERRENO\n                </h4>\n                <p className=\"text-sm text-white font-light\">\n                  Véndenos tu terreno a nosotros.\n                </p>\n                <div className=\"absolute right-0 top-0 w-[42px] h-[42px] bg-black/30 flex items-center justify-center cursor-pointer\">\n                  <ArrowTr color=\"#fff\" height={20} width={20} />\n                </div>\n              </div>\n              <div className=\"flex flex-col p-10 h-[248px] min-w-[50%] lg:min-w-[25%] 2xl:min-w-[20%] relative cursor-pointer 2xl:pb-0\">\n                <LotOfCash color=\"#fff\" height={38} width={38} />\n                <h4 className=\"uppercase text-[20px] text-white leading-none pt-5 pb-2\">\n                  ¿QUIERES INVERTIR?\n                </h4>\n                <p className=\"text-sm text-white font-light\">\n                  Empieza a invertir en el sector inmobiliario a través de\n                  nuestro fondo de inversión.\n                </p>\n                <div className=\"absolute right-0 top-0 w-[42px] h-[42px] bg-black/30 flex items-center justify-center cursor-pointer\">\n                  <ArrowTr color=\"#fff\" height={20} width={20} />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Banner;\n","import { PinAlt } from \"iconoir-react\";\nimport React, { useEffect, useState } from \"react\";\n\nimport \"swiper/css\";\n\nimport Button from \"./Button\";\nimport { navigate } from \"gatsby\";\n\ninterface ProjectProps {\n  tagName: string;\n  imageUrl: string;\n  imgAlt?: string;\n  logoUrl: string;\n  logoAlt?: string;\n  price: string;\n  ubication: string;\n  btn: string;\n  nroArea: string;\n  nroBedroom: string;\n  Typeprojects: boolean;\n  link: string\n}\n\nconst Project: React.FC<ProjectProps> = ({\n  tagName,\n  imageUrl,\n  imgAlt,\n  logoUrl,\n  logoAlt,\n  price,\n  ubication,\n  btn,\n  nroArea,\n  nroBedroom,\n  Typeprojects = false,\n  link,\n}) => {\n\n  const [TipoProyectos, setProyectos] = useState(Typeprojects);\n\n  const handleCustomClick = (event: string) => {\n    navigate(`/${link}`)\n  };\n\n  useEffect(() => {\n    if(Typeprojects !== undefined && Typeprojects !== null) {\n      setProyectos(Typeprojects);\n    }\n  },[Typeprojects])\n\n  return (\n    <div className=\"h-full\">\n      <div className=\"bg-[--gray] rounded h-full\">\n        <div className=\"w-full h-[300px] md:h-[478px] rounded-t relative\">\n          <img\n            className=\"w-full h-full object-cover rounded-t\"\n            src={imageUrl}\n            alt={imgAlt}\n          />\n          {/* <Swiper\n            spaceBetween={0}\n            pagination={true}\n            effect={'fade'}\n            slidesPerView={1}\n            autoplay={{\n              delay: 2000,\n              disableOnInteraction: false,\n            }}\n            modules={[Pagination, Autoplay, EffectFade]}\n            className=\"bulletBottom\"\n          >\n            <SwiperSlide>\n              <div className=\"h-[300px] md:h-[478px] w-full\">\n                <img className=\"w-full h-full object-cover rounded-t\" src={TopLifeOne} alt=\"\" />\n              </div>\n            </SwiperSlide>\n            <SwiperSlide>\n              <div className=\"h-[300px] md:h-[478px] w-full\">\n                <img className=\"w-full h-full object-cover rounded-t\" src={TopLifeTwo} alt=\"\" />\n              </div>\n            </SwiperSlide>\n          </Swiper> */}\n          <div className=\"min-w-[138px] flex items-center justify-center bg-[--color-primary] h-[36px] absolute top-4 left-4 z-[2] px-5\">\n            <p className=\"uppercase text-white\">{tagName}</p>\n          </div>\n        </div>\n        <div className=\"pb-10 mt-[-53px] relative z-[2]\">\n          <div className=\"mx-5 md:mx-10 bg-[--color-secondary] flex items-center rounded h-[107px]\">\n            <div className=\"w-full flex items-center justify-center\">\n              <img\n                className=\"h-[40px] md:h-[65px]\"\n                src={logoUrl}\n                alt={logoAlt}\n              />\n            </div>\n            <div className=\"w-full flex items-center justify-center\">\n              <div>\n                <p className=\"text-white uppercase text-xs md:text-sm leading-tight\">\n                  PRECIOS DE DESDE\n                </p>\n                <p className=\"text-white uppercase text-[22px] md:text-[30px] leading-none\">\n                  {price}\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"flex items-center justify-center gap-4 py-5 mx-5 md:mx-10 border-b border-[--border-ligth]\">\n            <PinAlt color=\"#313E48\" height={24} width={24} />\n            <p className=\"text-[--color-secondary] font-semibold text-sm md:text-base\">\n              {ubication}\n            </p>\n          </div>\n          <div className=\"flex items-center py-4\">\n            {TipoProyectos ? (\n              <div className=\"w-full flex items-center justify-center gap-4 border-r border-[--border-ligth]\">\n                <PinAlt\n                  className=\"hidden md:block\"\n                  color=\"#313E48\"\n                  height={32}\n                  width={32}\n                />\n                <p className=\"text-[--color-secondary] font-light text-sm md:text-base\">\n                  <span className=\"font-semibold\">{nroBedroom}</span> dorm.\n                </p>\n              </div>\n            ) : (\n              <div className=\"w-full flex items-center justify-center gap-4 border-r border-[--border-ligth]\">\n                <PinAlt\n                  className=\"hidden md:block\"\n                  color=\"#313E48\"\n                  height={32}\n                  width={32}\n                />\n                <div>\n                  <p className=\"text-[--color-secondary] font-light flex flex-col text-sm md:text-base\">\n                    <span className=\"leading-tight\">Separalo desde</span>\n                    <span className=\"leading-none font-semibold\">{nroBedroom}</span>\n                  </p>\n                </div>\n              </div>\n            )}\n            <div className=\"w-full flex items-center justify-center gap-4\">\n              <PinAlt\n                className=\"hidden md:block\"\n                color=\"#313E48\"\n                height={32}\n                width={32}\n              />\n              <p className=\"text-[--color-secondary] font-light text-sm md:text-base\">\n                Áreas desde <span className=\"font-semibold\">{nroArea}</span>\n              </p>\n            </div>\n          </div>\n          <div className=\"flex items-center justify-center md:pt-4 mx-5 md:mx-0\">\n            <Button\n              label={btn}\n              extraStyles=\"btn-secondary w-full md:w-[260px] h-[56px]\"\n              customClick={(event) => handleCustomClick(event)}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Project;\n","import { PinAlt } from \"iconoir-react\";\nimport React, { useEffect, useState } from \"react\";\n\nimport { Pagination, Autoplay, EffectFade } from \"swiper/modules\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\n\nimport Project from \"./Project\";\n\nimport \"swiper/css\";\nimport \"swiper/css/pagination\";\nimport \"swiper/css/effect-fade\";\nimport { processInfo } from \"../utils/processInfo\";\n\n\ninterface projectItem {\n  tagName: string,\n  imageUrl: string,\n  logoUrl: string,\n  price: string,\n  ubicacion: string,\n  btn: string,\n  nroArea: string,\n  nroBedroom: string,\n  TypeProjects: boolean,\n  link: string,\n}\n\nconst Projects = () => {\n\n  const [data, setData] = useState<projectItem[]>([]);\n\n  const getProjectInfo = async () => {\n    const dataResponse: any = await processInfo(\"projects\");\n\n    const dataFormatted = dataResponse.data.map((item: any) => ({\n      tagName: item.attributes.tagname,\n      imageUrl: item.attributes.image.data.attributes.url,\n      logoUrl: item.attributes.logo.data.attributes.url || \"\",\n      price: item.attributes.price,\n      ubicacion: item.attributes.ubication,\n      btn: item.attributes.btn,\n      nroArea: item.attributes.noarea,\n      nroBedroom: item.attributes.bedroom,\n      TypeProjects: item.attributes.type,\n      link: item.attributes.link,\n    }))\n\n    setData(dataFormatted);\n  }\n\n  useEffect(() => {\n    getProjectInfo();\n  }, []);\n\n  return (\n    <div>\n      <h2 className=\"text-center text-[--color-secondary] text-[30px] lg:text-[44px] pb-12\">\n        PROYECTOS EN VENTA\n      </h2>\n      <div className=\"grid grid-cols-10 md:grid-cols-12 gap-8\">\n        {data.map((item, index) => (\n          <div className=\"col-span-10 md:col-span-12 lg:col-span-6 h-full\" key={index}>\n            <Project\n              tagName={item.tagName}\n              imageUrl={item.imageUrl}\n              logoUrl={item.logoUrl}\n              price={item.price}\n              ubication={item.ubicacion}\n              btn={item.btn}\n              nroArea={item.nroArea}\n              nroBedroom={item.nroBedroom}\n              Typeprojects={item.TypeProjects}\n              link={item.link}\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Projects;\n","import * as React from \"react\";\nimport type { HeadFC, PageProps } from \"gatsby\";\nimport Header from \"../components/Header\";\nimport Banner from \"../components/Banner\";\nimport Projects from \"../components/Projects\";\nimport Footer from \"../components/Footer\";\n\nconst IndexPage: React.FC<PageProps> = () => {\n  return (\n    <>\n      <Header />\n      <Banner />\n      <div className=\"container mx-auto py-20 md:py-28 px-6 lg:px-0\">\n        <Projects />\n      </div>\n      <Footer />\n    </>\n  );\n};\n\nexport default IndexPage;\n\nexport const Head: HeadFC = () => <title>Val</title>;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from \"react\";\nimport { IconoirContext } from \"./IconoirContext.mjs\";\nfunction SvgPinAlt(passedProps, svgRef) {\n    var context = React.useContext(IconoirContext);\n    var props = __assign(__assign({}, context), passedProps);\n    return (React.createElement(\"svg\", __assign({ width: \"1.5em\", height: \"1.5em\", strokeWidth: 1.5, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", color: \"currentColor\", ref: svgRef }, props),\n        React.createElement(\"path\", { d: \"M20 10c0 4.418-8 12-8 12s-8-7.582-8-12a8 8 0 1116 0z\", stroke: \"currentColor\" }),\n        React.createElement(\"path\", { d: \"M12 11a1 1 0 100-2 1 1 0 000 2z\", fill: \"currentColor\", stroke: \"currentColor\", strokeLinecap: \"round\", strokeLinejoin: \"round\" })));\n}\nvar ForwardRef = React.forwardRef(SvgPinAlt);\nexport default ForwardRef;\n"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","passedProps","svgRef","context","IconoirContext","props","width","height","strokeWidth","viewBox","fill","xmlns","color","ref","d","stroke","strokeLinecap","strokeLinejoin","_ref","title","imgUrl","imgAlt","paragraph","nameProyect","titleMobile","projects","btn","link","proyectos","setProyectos","useState","useEffect","React","className","src","alt","City","Button","label","extraStyles","customClick","event","navigate","data","setData","async","dataFormatted","processInfo","map","item","attributes","image","url","titlemobile","imgalt","texto","projectname","getBannerInfo","Swiper","spaceBetween","pagination","effect","slidesPerView","loop","autoplay","delay","disableOnInteraction","modules","Pagination","Autoplay","EffectFade","onSwiper","console","log","index","SwiperSlide","key","SliderBanner","NavArrowRight","NavArrowLeft","ArrowTr","Planimetry","Farm","PiggyBank","HomeSale","LotOfCash","tagName","imageUrl","logoUrl","logoAlt","price","ubication","nroArea","nroBedroom","Typeprojects","TipoProyectos","PinAlt","tagname","logo","ubicacion","noarea","bedroom","TypeProjects","type","getProjectInfo","Project","Header","Banner","Projects","Footer","Head","ForwardRef"],"sourceRoot":""}